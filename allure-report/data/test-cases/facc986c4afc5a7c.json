{
  "uid" : "facc986c4afc5a7c",
  "name" : "test01_login_0",
  "fullName" : "test_script.Test_demo01#test01_login_0",
  "historyId" : "7d8c3291a23217319301c896fda99219",
  "time" : {
    "start" : 1605580665093,
    "stop" : 1605580686497,
    "duration" : 21404
  },
  "status" : "broken",
  "statusMessage" : "TypeError: exceptions must derive from BaseException",
  "statusTrace" : "self = <driver.action.Action object at 0x0000021BEFE03D60>, location = ['By.XPATH', \".//input[@id = 'userid']\"]\n\n    def find_element(self,location):\n        def ananysis_element(ele):\n            print(\"method_func:\",ele)\n            if ele == \"By.ID\":\n                return By.ID\n            elif ele == \"By.CLASS_NAME\":\n                return By.CLASS_NAME\n            elif ele == \"By.CSS_SELECTOR\":\n                return By.CSS_SELECTOR\n            elif ele == \"By.LINK_TEXT\":\n                return By.LINK_TEXT\n            elif ele == \"By.NAME\":\n                return By.NAME\n            elif ele == \"By.TAG_NAME\":\n                return By.TAG_NAME\n            elif ele == \"By.XPATH\":\n                return By.XPATH\n            elif ele == \"By.PARTIAL_LINK_TEXT\":\n                return By.PARTIAL_LINK_TEXT\n            else:\n                raise \"未解析的元素调用方法\"\n    \n    \n        if location:\n            print(\"location[1]:\",location)\n            try:\n>               self.ele = WebDriverWait(self.driver,20,0.3).until(lambda x: x.find_element(ananysis_element(location[0]),location[1]))\n\ndriver\\action.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"5875e4d350f68d99dc641863a81c0e6f\")>, method = <function Action.find_element.<locals>.<lambda> at 0x0000021BEFE04D30>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nd:\\soft_install\\python3.8.5\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\na = (<test_script.Test_demo01 testMethod=test01_login_0>,)\n\n    @wraps(func)\n    def standalone_func(*a):\n>       return func(*(a + p.args), **p.kwargs)\n\nd:\\soft_install\\python3.8.5\\lib\\site-packages\\parameterized\\parameterized.py:530: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_script.py:32: in test01_login\n    text = analysis_data_func(self.get_driver,loginData)\ndriver\\analysis_function.py:15: in analysis_data_func\n    tmp = analysis_action_func(driver,fileName=file,data_list=data_list)\ndriver\\analysis_function.py:55: in analysis_action_func\n    tmp = open_func(driver=driver,action_id=action_id,action_ele=action_ele,args=args)\ndriver\\analysis_function.py:73: in open_func\n    action.input_text(action_ele,args)\ndriver\\action.py:22: in input_text\n    self.find_element(element).send_keys(text)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <driver.action.Action object at 0x0000021BEFE03D60>, location = ['By.XPATH', \".//input[@id = 'userid']\"]\n\n    def find_element(self,location):\n        def ananysis_element(ele):\n            print(\"method_func:\",ele)\n            if ele == \"By.ID\":\n                return By.ID\n            elif ele == \"By.CLASS_NAME\":\n                return By.CLASS_NAME\n            elif ele == \"By.CSS_SELECTOR\":\n                return By.CSS_SELECTOR\n            elif ele == \"By.LINK_TEXT\":\n                return By.LINK_TEXT\n            elif ele == \"By.NAME\":\n                return By.NAME\n            elif ele == \"By.TAG_NAME\":\n                return By.TAG_NAME\n            elif ele == \"By.XPATH\":\n                return By.XPATH\n            elif ele == \"By.PARTIAL_LINK_TEXT\":\n                return By.PARTIAL_LINK_TEXT\n            else:\n                raise \"未解析的元素调用方法\"\n    \n    \n        if location:\n            print(\"location[1]:\",location)\n            try:\n                self.ele = WebDriverWait(self.driver,20,0.3).until(lambda x: x.find_element(ananysis_element(location[0]),location[1]))\n                return self.ele\n            except TimeoutException as f :\n>               raise \"未找到元素\"\nE               TypeError: exceptions must derive from BaseException\n\ndriver\\action.py:56: TypeError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup",
    "time" : {
      "start" : 1605580660575,
      "stop" : 1605580665070,
      "duration" : 4495
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "afterStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup::0",
    "time" : {
      "start" : 1605580713526,
      "stop" : 1605580716039,
      "duration" : 2513
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "suite",
    "value" : "test_script"
  }, {
    "name" : "subSuite",
    "value" : "Test_demo01"
  }, {
    "name" : "host",
    "value" : "DESKTOP-65DR0V4"
  }, {
    "name" : "thread",
    "value" : "16700-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_script"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "facc986c4afc5a7c.json",
  "parameterValues" : [ ]
}