{
  "uid" : "9ae44801b062e12b",
  "name" : "test01_send_text_0",
  "fullName" : "test_scripts.test_fwgl.Test_demo01#test01_send_text_0",
  "historyId" : "df4969769b95888b8ae4a68ea33c4bb8",
  "time" : {
    "start" : 1608086086842,
    "stop" : 1608086112338,
    "duration" : 25496
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: chrome=85.0.4183.121)",
  "statusTrace" : "a = (<test_scripts.test_fwgl.Test_demo01 testMethod=test01_send_text_0>,)\n\n    @wraps(func)\n    def standalone_func(*a):\n>       return func(*(a + p.args), **p.kwargs)\n\nd:\\soft_install\\python3.8.5\\lib\\site-packages\\parameterized\\parameterized.py:530: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_scripts\\test_fwgl.py:61: in test01_send_text\n    self.DocumentProxy.select_zsdw(zsdw_name)\npage\\Document_process.py:91: in select_zsdw\n    self.search_department.SearchName(zsdw_name)  # 调用部门选择方法，选择部门\nmodule\\select_department.py:69: in SearchName\n    self.Select_department()\nmodule\\select_department.py:49: in Select_department\n    self.double_click(self.select_ele)\ndriver\\action.py:108: in double_click\n    self.actionchains.double_click(self.find_element(element)).perform()\nd:\\soft_install\\python3.8.5\\lib\\site-packages\\selenium\\webdriver\\common\\action_chains.py:80: in perform\n    self.w3c_actions.perform()\nd:\\soft_install\\python3.8.5\\lib\\site-packages\\selenium\\webdriver\\common\\actions\\action_builder.py:76: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\nd:\\soft_install\\python3.8.5\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000254FB008FD0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: element is n...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77444A77+311]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77444A47+263]\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\nE         (Session info: chrome=85.0.4183.121)\n\nd:\\soft_install\\python3.8.5\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: StaleElementReferenceException",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1608086086841,
      "stop" : 1608086086841,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "_UnitTestCase__pytest_class_setup",
    "time" : {
      "start" : 1608086086841,
      "stop" : 1608086086841,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: chrome=85.0.4183.121)",
    "statusTrace" : "a = (<test_scripts.test_fwgl.Test_demo01 testMethod=test01_send_text_0>,)\n\n    @wraps(func)\n    def standalone_func(*a):\n>       return func(*(a + p.args), **p.kwargs)\n\nd:\\soft_install\\python3.8.5\\lib\\site-packages\\parameterized\\parameterized.py:530: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_scripts\\test_fwgl.py:61: in test01_send_text\n    self.DocumentProxy.select_zsdw(zsdw_name)\npage\\Document_process.py:91: in select_zsdw\n    self.search_department.SearchName(zsdw_name)  # 调用部门选择方法，选择部门\nmodule\\select_department.py:69: in SearchName\n    self.Select_department()\nmodule\\select_department.py:49: in Select_department\n    self.double_click(self.select_ele)\ndriver\\action.py:108: in double_click\n    self.actionchains.double_click(self.find_element(element)).perform()\nd:\\soft_install\\python3.8.5\\lib\\site-packages\\selenium\\webdriver\\common\\action_chains.py:80: in perform\n    self.w3c_actions.perform()\nd:\\soft_install\\python3.8.5\\lib\\site-packages\\selenium\\webdriver\\common\\actions\\action_builder.py:76: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\nd:\\soft_install\\python3.8.5\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000254FB008FD0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: element is n...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77444A77+311]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77444A47+263]\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\nE         (Session info: chrome=85.0.4183.121)\n\nd:\\soft_install\\python3.8.5\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: StaleElementReferenceException",
    "steps" : [ {
      "name" : "搜索部门 ",
      "time" : {
        "start" : 1608086097679,
        "stop" : 1608086105005,
        "duration" : 7326
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "切换iframe到选择框",
        "time" : {
          "start" : 1608086097682,
          "stop" : 1608086097710,
          "duration" : 28
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "ele",
          "value" : "('By.XPATH', '//div[@class=\"layui-layer-content\"]/iframe')"
        } ],
        "hasContent" : true,
        "stepsCount" : 0,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 0
      }, {
        "name" : "点击顶部的公司名称，是所有部门或这人员都展示在选择框内供选择",
        "time" : {
          "start" : 1608086097710,
          "stop" : 1608086098206,
          "duration" : 496
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "e0dad5d1d2480054",
          "name" : "截图",
          "source" : "e0dad5d1d2480054.png",
          "type" : "image/png",
          "size" : 155545
        } ],
        "parameters" : [ ],
        "hasContent" : true,
        "stepsCount" : 0,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 1
      }, {
        "name" : "切换iframe到选择框",
        "time" : {
          "start" : 1608086098207,
          "stop" : 1608086098241,
          "duration" : 34
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "ele",
          "value" : "('By.NAME', 'ifmmiddle')"
        } ],
        "hasContent" : true,
        "stepsCount" : 0,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 0
      }, {
        "name" : "选择要发送的部门",
        "time" : {
          "start" : 1608086102446,
          "stop" : 1608086103130,
          "duration" : 684
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "e31e0dc09e1ae28d",
          "name" : "截图",
          "source" : "e31e0dc09e1ae28d.png",
          "type" : "image/png",
          "size" : 151603
        } ],
        "parameters" : [ ],
        "hasContent" : true,
        "stepsCount" : 0,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 1
      } ],
      "attachments" : [ {
        "uid" : "a223bd43ab3facd5",
        "name" : "截图",
        "source" : "a223bd43ab3facd5.png",
        "type" : "image/png",
        "size" : 151603
      }, {
        "uid" : "68b05092c54a0a9c",
        "name" : "截图",
        "source" : "68b05092c54a0a9c.png",
        "type" : "image/png",
        "size" : 153031
      } ],
      "parameters" : [ {
        "name" : "name",
        "value" : "['信息中心']"
      } ],
      "hasContent" : true,
      "stepsCount" : 4,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 4
    }, {
      "name" : "搜索部门 ",
      "time" : {
        "start" : 1608086107647,
        "stop" : 1608086112337,
        "duration" : 4690
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: chrome=85.0.4183.121)\n\n",
      "statusTrace" : "  File \"d:\\soft_install\\python3.8.5\\lib\\site-packages\\allure_commons\\_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"E:\\python_code\\OA_auto\\module\\select_department.py\", line 69, in SearchName\n    self.Select_department()\n  File \"d:\\soft_install\\python3.8.5\\lib\\site-packages\\allure_commons\\_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"E:\\python_code\\OA_auto\\module\\select_department.py\", line 49, in Select_department\n    self.double_click(self.select_ele)\n  File \"E:\\python_code\\OA_auto\\driver\\action.py\", line 108, in double_click\n    self.actionchains.double_click(self.find_element(element)).perform()\n  File \"d:\\soft_install\\python3.8.5\\lib\\site-packages\\selenium\\webdriver\\common\\action_chains.py\", line 80, in perform\n    self.w3c_actions.perform()\n  File \"d:\\soft_install\\python3.8.5\\lib\\site-packages\\selenium\\webdriver\\common\\actions\\action_builder.py\", line 76, in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n  File \"d:\\soft_install\\python3.8.5\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"d:\\soft_install\\python3.8.5\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ {
        "name" : "切换iframe到选择框",
        "time" : {
          "start" : 1608086107651,
          "stop" : 1608086107674,
          "duration" : 23
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "ele",
          "value" : "('By.XPATH', '//div[@class=\"layui-layer-content\"]/iframe')"
        } ],
        "hasContent" : true,
        "stepsCount" : 0,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 0
      }, {
        "name" : "点击顶部的公司名称，是所有部门或这人员都展示在选择框内供选择",
        "time" : {
          "start" : 1608086107674,
          "stop" : 1608086108111,
          "duration" : 437
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "1a3b9731198e4e86",
          "name" : "截图",
          "source" : "1a3b9731198e4e86.png",
          "type" : "image/png",
          "size" : 157131
        } ],
        "parameters" : [ ],
        "hasContent" : true,
        "stepsCount" : 0,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 1
      }, {
        "name" : "切换iframe到选择框",
        "time" : {
          "start" : 1608086108112,
          "stop" : 1608086108135,
          "duration" : 23
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "ele",
          "value" : "('By.NAME', 'ifmmiddle')"
        } ],
        "hasContent" : true,
        "stepsCount" : 0,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 0
      }, {
        "name" : "选择要发送的部门",
        "time" : {
          "start" : 1608086112322,
          "stop" : 1608086112335,
          "duration" : 13
        },
        "status" : "broken",
        "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: chrome=85.0.4183.121)\n\n",
        "statusTrace" : "  File \"d:\\soft_install\\python3.8.5\\lib\\site-packages\\allure_commons\\_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"E:\\python_code\\OA_auto\\module\\select_department.py\", line 49, in Select_department\n    self.double_click(self.select_ele)\n  File \"E:\\python_code\\OA_auto\\driver\\action.py\", line 108, in double_click\n    self.actionchains.double_click(self.find_element(element)).perform()\n  File \"d:\\soft_install\\python3.8.5\\lib\\site-packages\\selenium\\webdriver\\common\\action_chains.py\", line 80, in perform\n    self.w3c_actions.perform()\n  File \"d:\\soft_install\\python3.8.5\\lib\\site-packages\\selenium\\webdriver\\common\\actions\\action_builder.py\", line 76, in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n  File \"d:\\soft_install\\python3.8.5\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"d:\\soft_install\\python3.8.5\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : true,
        "stepsCount" : 0,
        "shouldDisplayMessage" : true,
        "attachmentsCount" : 0
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "name",
        "value" : "['办公室', '计财科']"
      } ],
      "hasContent" : true,
      "stepsCount" : 4,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1
    } ],
    "attachments" : [ {
      "uid" : "f4881782634b658d",
      "name" : "log",
      "source" : "f4881782634b658d.txt",
      "type" : "text/plain",
      "size" : 322
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 10,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 6
  },
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1608086112402,
      "stop" : 1608086112402,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "_UnitTestCase__pytest_class_setup::0",
    "time" : {
      "start" : 1608086112400,
      "stop" : 1608086112400,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test_scripts"
  }, {
    "name" : "suite",
    "value" : "test_fwgl"
  }, {
    "name" : "subSuite",
    "value" : "Test_demo01"
  }, {
    "name" : "host",
    "value" : "DESKTOP-65DR0V4"
  }, {
    "name" : "thread",
    "value" : "19424-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_scripts.test_fwgl"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "9ae44801b062e12b.json",
  "parameterValues" : [ ]
}